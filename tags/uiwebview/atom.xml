<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: UIWebview | Begin iOS]]></title>
  <link href="http://limingit.github.io/tags/uiwebview/atom.xml" rel="self"/>
  <link href="http://limingit.github.io/"/>
  <updated>2014-02-27T10:22:42+00:00</updated>
  <id>http://limingit.github.io/</id>
  <author>
    <name><![CDATA[Bencalie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[UIWebview 顺时针旋转 90 度]]></title>
    <link href="http://limingit.github.io/blog/2014/02/25/uiwebview-rotate/"/>
    <updated>2014-02-25T15:50:00+00:00</updated>
    <id>http://limingit.github.io/blog/2014/02/25/uiwebview-rotate</id>
    <content type="html"><![CDATA[<p>微博的 iPhone 客户端是竖屏浏览的，前两天 9173 推出了一个 Flappy Bird 微博版，是一个横屏的 HTML 游戏。因此在内嵌浏览器中依然是竖着浏览的，下面出现了一大块黑色背景，9173 不得已下面放了一个图标，示意玩家旋转屏幕为横屏来玩。如图：</p>

<p><img src="images/blog/flappy-bird.jpg"></p>

<!--more-->


<p>这给人的感觉很不好，于是开始琢磨怎么改进。有两个思路：</p>

<ul>
<li>页面自身内容旋转 90 度</li>
<li>Webview 本身旋转 90 度</li>
</ul>


<p>一开始的思路是页面内将 canvas 画布通过 CSS3 的 transform 来实现：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;canvas style="transform:rotate(90deg);">&lt;/canvas></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>经测试，虽然表面旋转过来了，JS 里的坐标系还是以 BODY 的为准，这个想法放弃。</p>

<p>那只有尝试第二种了，直接旋转 Webview，这里只尝试了 iOS 系统，Android 未测试</p>

<p>其实一行代码就搞定了（这里 webView 是 UIWebview 的引用）：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">webView</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CGAffineTransformMakeRotation</span><span class="p">(</span><span class="n">M_PI</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>圆周率 PI 表示 180度，在 Objective-C 里用 M_PI 表示，旋转 90 度，就是除以 2。</p>

<p>下面的代码，可以基于原有的旋转角度进一步旋转：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">CGAffineTransform</span> <span class="n">transform</span> <span class="o">=</span> <span class="n">webView</span><span class="p">.</span><span class="n">transform</span><span class="p">;</span>
</span><span class='line'><span class="n">webView</span><span class="p">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">CGAffineTransformRotate</span><span class="p">(</span><span class="n">transform</span><span class="p">,</span> <span class="n">M_PI</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>微博客户端里，可以进行判断，如果需要横屏展示的应用（开发者在后台设置），就自动旋转 UIWebview，同时将 navigationBar 和底部导航都旋转以适应。全屏游戏甚至不需要展示 navigationBar 和底部导航。</p>

<p>需要注意的是，UIWebview 里最好就不要用 window 对象下 alert、confirm 等，因为他们还是竖屏显示的。可以自己用 HTML/CSS 制作这样的 UI。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS UIWebview 中直接唤起电话拨号]]></title>
    <link href="http://limingit.github.io/blog/2014/02/14/ios-uiwebview-support-telephone-call/"/>
    <updated>2014-02-14T06:39:00+00:00</updated>
    <id>http://limingit.github.io/blog/2014/02/14/ios-uiwebview-support-telephone-call</id>
    <content type="html"><![CDATA[<p>在 iPhone 自带的 Safari 浏览器中，是可以通过苹果公司定义的 <a href="https://developer.apple.com/library/ios/featuredarticles/iPhoneURLScheme_Reference/Introduction/Introduction.html">Apple URL Schemas</a> 直接呼出电话拨号的，效果如图：</p>

<p><img src="/images/blog/tel-url-schema.png"></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>HTML中的写法 </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;tel:10010&quot;</span><span class="nt">&gt;</span>联通客户服务热线10010<span class="nt">&lt;/a&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<!--more-->


<p>如果想禁用此功能，在页面的 &lt;head&gt;&lt;/head&gt; 之间添加如下代码：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;format-detection&quot;</span> <span class="na">content=</span><span class="s">&quot;telephone=no&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>但在一个原生的 iOS 应用中，直接添加一个 UIWebview，嵌入相同的页面后，点击链接却没有出现这个确认提示。新浪微博官方客户端里也无效。长按这个链接，能看到呼叫、保存到通讯录的菜单，证明内置浏览器还是能识别这个 url schema。</p>

<p>微信和百度的内置浏览器中，点击同样的链接，会直接唤起，如图：</p>

<p><img src="/images/blog/weixin-tel-schema.jpg"></p>

<p>经过研究，发现不同之处，微信等是原生应用中唤起的。</p>

<p>需要在 UIViewController 的头文件中中设置支持 UIWebviewDelegate，并在实现代理方法 &ndash; (BOOL)webView:(UIWebView <em>)webView shouldStartLoadWithRequest:(NSURLRequest </em>)request navigationType:(UIWebViewNavigationType)navigationType，一旦发现是 tel:// 这种格式，就在由 Objective-C 唤起拨号。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="kt">BOOL</span><span class="p">)</span><span class="nl">webView:</span><span class="p">(</span><span class="n">UIWebView</span> <span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">webView</span> <span class="nl">shouldStartLoadWithRequest:</span><span class="p">(</span><span class="n">NSURLRequest</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">request</span> <span class="nl">navigationType:</span><span class="p">(</span><span class="n">UIWebViewNavigationType</span><span class="p">)</span><span class="n">navigationType</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">NSURL</span> <span class="o">*</span><span class="n">url</span> <span class="o">=</span> <span class="p">[</span><span class="n">request</span> <span class="n">URL</span><span class="p">];</span>
</span><span class='line'><span class="k">if</span><span class="p">([[</span><span class="n">url</span> <span class="n">schema</span><span class="p">]</span> <span class="nl">isEqualToString:</span><span class="s">@&quot;tel&quot;</span><span class="p">]){</span>
</span><span class='line'>    <span class="p">[[</span><span class="n">UIApplication</span> <span class="n">sharedApplication</span><span class="p">]</span> <span class="nl">openURL:</span><span class="n">url</span><span class="p">];</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">NO</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">return</span> <span class="n">YES</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>参考资料：</h3>

<p>URL Schema 在浏览器中的兼容性：<a href="http://answers.oreilly.com/topic/2166-how-to-send-a-text-message-from-your-mobile-website/">How to Send a Text Message from Your Mobile Website</a></p>
]]></content>
  </entry>
  
</feed>
