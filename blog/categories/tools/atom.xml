<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tools | Begin iOS]]></title>
  <link href="http://limingit.github.io/blog/categories/tools/atom.xml" rel="self"/>
  <link href="http://limingit.github.io/"/>
  <updated>2014-02-17T06:58:14+00:00</updated>
  <id>http://limingit.github.io/</id>
  <author>
    <name><![CDATA[Bencalie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[iOS 开发工具集合]]></title>
    <link href="http://limingit.github.io/blog/2014/02/17/ios-development-tools/"/>
    <updated>2014-02-17T06:50:00+00:00</updated>
    <id>http://limingit.github.io/blog/2014/02/17/ios-development-tools</id>
    <content type="html"><![CDATA[<h3>SQLite 管理</h3>

<h4>SQLiteManager</h4>

<p>官方首页：<a href="http://www.sqlabs.net/sqlitemanager.php">http://www.sqlabs.net/sqlitemanager.php</a></p>

<p>商业软件，支持 Windows 和 Mac 系统。</p>

<p>本地 SQLite 数据库管理，可以进行增删改查。比 Firefox 的 SQLite Manager 插件更加强大</p>

<p><img class="<a" src="href="http://www.sqlabs.net/images/sqlitemanager4/main@2x.jpg">http://www.sqlabs.net/images/sqlitemanager4/main@2x.jpg</a>"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OS 下抓包工具 Charles 使用]]></title>
    <link href="http://limingit.github.io/blog/2014/01/14/charles-proxy-for-mac/"/>
    <updated>2014-01-14T02:43:00+00:00</updated>
    <id>http://limingit.github.io/blog/2014/01/14/charles-proxy-for-mac</id>
    <content type="html"><![CDATA[<p>对于经常在 Windows 下进行 Web 开发的人来说，<a href="http://www.fiddler2.com/">Fiddler</a> 是神器。但由于它是 .Net Framework 下开发的，注定了用于 Linux 或者 Unix 之类系统上只能通过反向代理，如果不在同一个局域网内，非常麻烦。</p>

<p>还好在 Mac OSX 下我们还有 <a href="http:///www.charlesproxy.com/">Charles</a>。</p>

<p>和 Fiddler 相比较，二者的功能不相伯仲。优势在于 Charles 跨平台能力强，Charles 支持 Windows/Mac OS/Linux，Fiddler 只能安装在 Windows 下；劣势在于 Charles 是商业软件，最便宜也得 50 美金。</p>

<p>当然，网上已经有很多破解版，感兴趣的网友请自己搜索。</p>

<p>一些使用技巧如下：</p>

<h3>记录设置</h3>

<p>主菜单 Proxy->Recording Settings&hellip;</p>

<p>Include 填写必须要记录的域名，可以使用通配符 * 和 ?，如： *.beginios.com</p>

<p>Exclude 填写不需要记录的域名，可以使用通配符 * 和 ?</p>

<p>注：如果不设置此项，表示全部记录</p>

<h3>禁用缓存</h3>

<p>主菜单 Tools->No Caching&hellip;</p>

<p>勾选后，每次都从服务器读取</p>

<h3>iOS 设备 HTTP 抓包</h3>

<ol>
<li>确保 iOS 设备和 Mac 电脑在同一个局域网内，启动 Charles</li>
<li>打开 Proxy->Proxy Settings&hellip;，勾选 Enable transparent HTTP proxying</li>
<li>查看 Mac 电脑的 IP 地址，如：192.168.1.100</li>
<li>打开 iOS 设备的设置，进入当前 Wifi 连接，设置 HTTP 代理切换到“手动”，将服务器填为上一步中获得的 IP，端口填8888</li>
<li>iOS 设备中，打开你要抓包的应用进行网络操作</li>
<li>Charles 弹出确认框，点击 Allow 按钮即可</li>
</ol>


<h3>HTTPS抓包</h3>

<ol>
<li>下载 <a href="http://www.charlesproxy.com/ssl.zip">Charles 证书</a>，解压后导入到 iOS 设备中（将 crt 文件作为邮件附件发给自己，再在 iOS 设备中点击附件即可安装；也可上传至 dropbox 之类的网盘，通过 safari 下载安装）</li>
<li>在Charles的工具栏上点击设置按钮，选择 Proxy Settings…</li>
<li>切换到 SSL 选项卡，选中 Enable SSL Proxying，然后在 Locations 表单填写要抓包的域名和端口，点击Add按钮，在弹出的表单中 Host 填写域名，比如填 api.weibo.com，Port 填 443</li>
</ol>


<h3>替换本地文件</h3>

<p>Tools &ndash;> Map Local&hellip;</p>

<h3>网络延迟功能</h3>

<p>主菜单  Proxy->Throttle Settings&hellip;</p>

<p>可以用于测试慢速网络下程序的兼容性</p>
]]></content>
  </entry>
  
</feed>
