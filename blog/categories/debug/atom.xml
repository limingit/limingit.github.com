<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Debug | Begin iOS]]></title>
  <link href="http://limingit.github.io/blog/categories/debug/atom.xml" rel="self"/>
  <link href="http://limingit.github.io/"/>
  <updated>2014-04-11T04:53:26+00:00</updated>
  <id>http://limingit.github.io/</id>
  <author>
    <name><![CDATA[Bencalie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[移动页面前端调试 - iOS 系统]]></title>
    <link href="http://limingit.github.io/blog/2014/02/27/ios-mobile-page-debug/"/>
    <updated>2014-02-27T15:52:00+00:00</updated>
    <id>http://limingit.github.io/blog/2014/02/27/ios-mobile-page-debug</id>
    <content type="html"><![CDATA[<p>随着移动智能设备的普及，前端开发的工作战线，越来越多偏向移动方向，因此，移动设备上的调试能力是必不可少的。</p>

<p>主流的移动设备，还是 Android 和 iOS，因此，我将分两篇文章，分别介绍 iOS 和 Android 下的前端调试技术。</p>

<p>iOS 设备下进行 HTML 页面的调试，根据页面的调用方式不同，分为两种情况：</p>

<ul>
<li><p>直接在浏览器中显示 HTML 页面。无论系统自带的 Safari，还是其他厂商的浏览器（如 Chrome、猎豹、搜狗、海豚、Mercury、QQ 等等），均在此列。</p></li>
<li><p>原生应用中集成的 UIWebview 中显示 HTML 页面。Cordova（原名 PhoneGap） 的内置 Webview 也算在此列。</p></li>
</ul>


<h2>测试环境访问</h2>

<p>iOS 下不越狱是没法设置 HOST 的。</p>

<p>如果你的代码还在测试环境，目前只能通过 Wifi 代理，在充当代理的机器上设置 HOST 来解决。</p>

<p>如果越狱了就好办了， iFile 找到 /etc/hosts 修改。网上资料很多，大家自己发掘吧</p>

<p>下面，我们就逐一介绍如何进行调试。</p>

<h2>Safari</h2>

<p>Mac 下的 Safari 是自带了开发人员工具的，可以进行页面调试，但是 iPhone/iPad 下由于手持设备屏幕大小和触摸式操作习惯的影响，iOS 系统的 Safari 没有带调试功能。</p>

<p>如果你的设备是 iOS 6 以上，且有一台 Mac 电脑，你就可以利用 Mac 电脑上的 Safari ，远程进行调试。</p>

<p><strong>注：Windows 下的 Safari 不支持这个功能。</strong></p>

<p>分如下几个步骤完成：</p>

<p>1、iOS 设备开启远程调试。进入设置 &ndash;> Safari &ndash;> 高级，将 Web 检查器一项开启。</p>

<!--more-->


<p><img src="/images/blog/mobiledebug/ios-safari-setting.png"></p>

<p>2、将设备用数据线连接到 Mac 电脑上。</p>

<p>3、打开 Mac 电脑上的 Safari，打开偏好设置，在高级选项卡，勾选<strong>在菜单中显示“开发”菜单</strong>，开启开发模式。</p>

<p><img src="/images/blog/mobiledebug/mac-safari-setting.png"></p>

<p>4、手机上 Safari 打开你需要调试的页面，然后再 Mac 电脑的 Safari 开发菜单下找到你的设备名，子菜单下有设备已经开启的网页。选择你需要调试的页面。</p>

<p><img src="/images/blog/mobiledebug/mac-safari-find.png"></p>

<p>5、其实已经结束了，你将看到如图的 Web Inspector 界面，鼠标在这里操作，设备上也相应发生变化
。</p>

<p><img src="/images/blog/mobiledebug/mac-safari-web-inspector.png"></p>

<p><img src="/images/blog/mobiledebug/ios-safari-debug.png"></p>

<p>你可以像平时那样，调试 JavaScript，修改 HTML/CSS，查看本地的 cookie、本地存储、应用缓存等。</p>

<p>检查器上还有个手型的图标，激活它以后，设备 Safari 上选择点击一个元素，检查器上就能相应反馈出来。</p>

<p><img src="/images/blog/mobiledebug/mac-safari-web-inspector-hand.png"></p>

<p><strong>iOS 6 以前的系统，就只能使用 Weinre 了。</strong></p>

<h2>Weinre</h2>

<p>如何使用，请阅读<a href="http://beginios.com/blog/2014/02/28/debug-with-weinre/">使用 Weinre 调试移动网页</a></p>

<h2>Adobe Edge（原名 Adobe Shadow）</h2>

<p>Adobe Edge 是基于 Weinre 开发的工具，它能轻松的在多台设备（支持IOS、Android）上同步浏览网页，还能任选其一来调试。由于在移动设备上有 App 的支持，省去了手工插入 target script 这一步，非常方便。美中不足是它的 client 页访问的 Adobe 远程服务器，延时比较大。</p>

<p><a href="http://html.adobe.com/edge/inspect/">http://html.adobe.com/edge/inspect/</a></p>

<h2>MIHTool（<a href="http://www.iunbug.com/mihtool">官网</a>）</h2>

<p>MIHTool 是国内开发者<a href="http://weibo.com/unbug">@听奏</a> 开发的一款 iOS 调试工具。</p>

<p>iPhone 版需要远程打开 Web Inspector，而 iPad 版是内置在界面中的。界面可以去官网<a href="http://www.iunbug.com/mihtool-zh">查看</a>。</p>

<p>iPad 版跟 Mac 下的 Safari 调试类似，不多做介绍。这里仅仅介绍一下 iPhone 版的。</p>

<p>1、打开应用，输入你要调试的页面</p>

<p><img src="/images/blog/mobiledebug/mihtool-open-url.jpg"></p>

<p>2、然后点击下面工具条的 i 图标，就能看到一个页面：<a href="http://localhost:1630/about">http://localhost:1630/about</a></p>

<p><img src="/images/blog/mobiledebug/mihtool-about.jpg"></p>

<p>这里可以看到 MIHTool 已经在设备上起了一个 HTTP 服务，直接打开这个地址：<a href="http://10.209.19.138:1630/">http://10.209.19.138:1630/</a> ，是一个使用指南，告诉你如何使用这个工具。</p>

<p><img src="/images/blog/mobiledebug/mihtool-local-ip.png"></p>

<ul>
<li>可以唤起设备上的应用来调试，包含 MIHTool、Safari、Chrome</li>
<li>调用 Web Inspector 的方法（设备 IP，或者开发者提供的在线服务器）</li>
<li>查看历史记录、重载当前页面、清理缓存/cookie 等</li>
</ul>


<p>大家重点关注 Web Inspector 部分，新标签中打开其中一个 URL，如图：</p>

<p><img src="/images/blog/mobiledebug/mihtool-romote-ip.png"></p>

<p>点击 Targets 中的 URL，然后切换到 Elements 选项卡，我们现在看到的界面，跟 Chrome 的开发者工具一样。在这里尽情调试吧。</p>

<p>来，我们修改一下页面的背景色，看看会发生什么？</p>

<p><img src="/images/blog/mobiledebug/mihtool-modify-color.png"></p>

<p><img src="/images/blog/mobiledebug/mihtool-about-modified.jpg"></p>

<p>细心的人估计已经看出来了，本质上，MIHTool 就是 Weinre。</p>

<!--
## Chrome

## 应用中的 UIWebView
-->


<p>iOS 下进行抓包，还可以安装 HTTPWatch，基础版是免费的，专业版需要 ￥648.00，还是比较贵的。</p>
]]></content>
  </entry>
  
</feed>
