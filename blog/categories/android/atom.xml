<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | Begin iOS]]></title>
  <link href="http://beginios.com/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://beginios.com/"/>
  <updated>2014-08-19T03:25:52+00:00</updated>
  <id>http://beginios.com/</id>
  <author>
    <name><![CDATA[Bencalie]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[解决小米、红米及其他 Android 手机无法在 Mac 下进行真机调试的问题]]></title>
    <link href="http://beginios.com/blog/2014/08/19/fix-unknown-android-phone-device-for-mac/"/>
    <updated>2014-08-19T15:42:00+00:00</updated>
    <id>http://beginios.com/blog/2014/08/19/fix-unknown-android-phone-device-for-mac</id>
    <content type="html"><![CDATA[<p>在 Mac OSX 下做 Android 真机测试的时候，发现 Android Device Chooser 里，小米手机的状态显示为 unknown。但是手机的 USB 调试已经打开了。难道是因为驱动的问题？然而小米并没有提供 Mac 下的驱动程序。</p>

<p><img src="/images/blog/android/unknown_android_phone.jpg"></p>

<p>注：小米手机打开 USB 调试模式的方法——在“关于手机”里，连续点击“Android 版本”四次，然后回到上一级，“关于手机”上面就出现了“开发者选项”</p>

<p>其实在 Linux 和 Mac 上是不需要安装驱动的，只要让 ADB 能够识别小米手机的 USB Vendor ID 即可。</p>

<p>解决办法：</p>

<p>1、配置 Android 开发环境。最好直接去 <a href="http://developer.android.com/sdk/index.html">Android 官网</a>下载一个集成的 ADT(Android Developer Tools) 工具即可，解压缩以后 Eclipse 和 SDK 都有了。</p>

<p>记得配置 ~/.bash_profile，请自行搜索相关资料。</p>

<p>2、查找设备的厂商号（Vendor ID）。点击屏幕左上角苹果标志->关于本机->更多信息->系统报告，在左侧列表选择 USB，就能看到对应的 USB 设备厂商号。</p>

<p>找到其中的类似于“HM1 Android Phone”的东东（不同设备略有不同，自己摸索吧），点击在下方看详细信息，如图：</p>

<p><img src="/images/blog/android/find_vendor_id.png"></p>

<!-- more -->


<p>其中的厂商 ID 就是我们需要的，小米1的一般是 0x18dl，小米 2 以后 和 红米应该是 0x2717。</p>

<p>3、执行命令
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo &ldquo;0x2717&rdquo; >> ~/.android/adb_usb.ini</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>4、重启 ADB。如果配置了 adb 的环境，就直接执行</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>adb kill-server
</span><span class='line'>adb start-server</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果没有，就要进入 Android SDK 目录下的 platform-tools 去执行（早期的 Android SDK 版本，可能在 tools 目录下）：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./adb kill-server
</span><span class='line'>./adb start-server</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>成功后应该能看见提示：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* daemon not running. starting it now on port 5037 *
</span><span class='line'>* daemon started successfully *</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>如果遇到错误：
<div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>can&rsquo;t bind &lsquo;tcp:5037&rsquo;,
</span><span class='line'>ADB server didn&rsquo;t ACK
</span><span class='line'>*faild to start daemon *</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>就将 5037 端口的进程杀掉重启就可以了，实在不行就重启一下电脑。</p>

<p>最后拔掉手机重新连接一下，手机会提示是否允许连接这台电脑进行 USB 调试，确定后应该就可以了。</p>

<p><img src="/images/blog/android/android_device_chooser_sucess.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android 下开发 HTML5 遇到的坑]]></title>
    <link href="http://beginios.com/blog/2014/02/26/android-html5-development-trap/"/>
    <updated>2014-02-26T15:50:00+00:00</updated>
    <id>http://beginios.com/blog/2014/02/26/android-html5-development-trap</id>
    <content type="html"><![CDATA[<p>这两天在开发一个 HTML5 的应用，主要是用于 Android 下的 WebView 内嵌使用。开发阶段，在 PC 的 Chrome 上测试，一切正常。但是和应用真机联调的时候，遇到了一系列问题，耗时颇久，总算一一解决，总结如下</p>

<h2>设置HOST</h2>

<p>因为是在测试环境，第一步就是要设置 HOST，确保域名指向相应的 IP。</p>

<p>一般来说，有两种办法：</p>

<ul>
<li><p>在手机浏览器中测试，是给 Wifi 设置 HTTP 代理，指向开着 Fiddler 或者 Charles 的 PC 机的 IP（端口号 8888），在 PC 机上设置 HOST，达到测试的目的。对于没有 ROOT 权限的 Android 机器，这几乎就足够了。</p></li>
<li><p>在开发机中设置 HOST。不过这要求有 ROOT 权限才能编辑。</p></li>
</ul>


<p>设置 HOST 的时候，我习惯性修改的是 /etc/hosts，结果无论如何都不生效。后来查询资料，才知道，应该修改 /system/etc/hosts。并且请注意 HOST 文件最后一定要有一行空行。</p>

<p>如果是在 Windows 下修改并同步过去的，还要注意换行符的问题。</p>

<!--more-->


<h2>清缓存</h2>

<p>应用的 WebView 自身也有缓存，有同事在改了文件后，一直发现无变化。后来进入设置->应用程序->管理应用程序，找到我们的 APP，清掉全部数据后才生效。</p>

<h2>SQLite 数据库</h2>

<p>应用中使用了 SQLite 缓存部分数据，Android 2.* + 上 通过 try catch 捕获到 SQLite 报错：Cannot call method &lsquo;transaction&rsquo; of null。</p>

<p>最初的解决方案是，不仅要检查是否有 openDatabase 还要检查实例化结果是否有 transaction 方法，如果没有就走 sessionStorage 来存储。</p>

<p>根本原因，是因为数据库路径的问题导致，当没有指定数据库文件路径而使用 Web SQL 数据库时，错误信息显示不能打开sqlite数据库文件。</p>

<p>解决方法：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">webView</span><span class="o">.</span><span class="na">setWebChromeClient</span><span class="o">(</span><span class="k">new</span> <span class="n">WebChromeClient</span><span class="o">(){&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nd">@Override</span>
</span><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">onExceededDatabaseQuota</span><span class="o">(</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">url</span><span class="o">,</span>
</span><span class='line'>    <span class="n">String</span> <span class="n">databaseIdentifier</span><span class="o">,</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">currentQuota</span><span class="o">,</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">estimatedSize</span><span class="o">,</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">totalUsedQuota</span><span class="o">,</span>
</span><span class='line'>    <span class="n">QuotaUpdater</span> <span class="n">quotaUpdater</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">quotaUpdater</span><span class="o">.</span><span class="na">updateQuota</span><span class="o">(</span><span class="mi">5</span> <span class="o">*</span> <span class="mi">1024</span> <span class="o">*</span> <span class="mi">1024</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="n">webSettings</span><span class="o">.</span><span class="na">setDatabaseEnabled</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">databasePath</span> <span class="o">=</span> <span class="n">getApplicationContext</span><span class="o">().</span><span class="na">getDir</span><span class="o">(</span><span class="s">&quot;database&quot;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">).</span><span class="na">getPath</span><span class="o">();</span>
</span><span class='line'><span class="n">webSettings</span><span class="o">.</span><span class="na">setDatabasePath</span><span class="o">(</span><span class="n">databasePath</span><span class="o">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>参考：<a href="http://www.html5online.com.cn/articles/2013012101.html">在WebView中设定使用Web Storage与Web SQL数据库</a></p>

<h2>history.pushState</h2>

<p>pushState 执行完，取 URL 还是之前的。只能切换场景的时候，将新场景的 URL 通过传参的形式传递。</p>
]]></content>
  </entry>
  
</feed>
